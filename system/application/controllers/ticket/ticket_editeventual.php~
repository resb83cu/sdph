<?php

/**
 * @orm ticket_editetecsa
 */
class Ticket_editeventual extends Controller {
	
	function __construct() {
		parent::Controller ();
		$this->load->model ( 'ticket/ticket_editeventual_model', 'conn', true );
	}
	
	function index() {
		$centinela = new Centinela ( );
		$flag = $centinela->accessTo ( 'ticket/ticket_editeventual' );
		if ($flag) {
			$this->load->view ( 'sys/header_view' );
			$this->load->view ( 'ticket/ticket_editeventual_view' );
			$this->load->view ( 'sys/footer_view' );
		} else {
			$this->redirectError ();
		}
	}
	
	function redirectError() {
		$this->load->view ( 'sys/header_view' );
		$this->load->view ( 'error_message' );
		$this->load->view ( 'sys/footer_view' );
	}
	
	/**
	 * Busca los datos para llenar el grid y los devuelve en formato JSON
	 *
	 */
	public function setDataGrid() {
		$to = (! isset ( $_POST ['limit'] )) ? 15 : $_POST ['limit'];
		$from = (! isset ( $_POST ["start"] )) ? 0 : $_POST ["start"];
		$dateStart = $this->input->post ( 'dateStart' );
		$dateEnd = $this->input->post ( 'dateEnd' );
		//$province = $this->input->post('province');
		$motive = $this->input->post ( 'motive' );
		$state = $this->input->post ( 'state' );
		$this->load->model ( 'request/request_tickets_model', 'conn2', true );
		return $this->conn2->getDataEventual ( $to, $from, $dateStart, $dateEnd, $motive, $state );
	
	}
	
	public function eventualPdf() {
			$dateStart = $this->input->post ( 'startdt' );
			$dateEnd = $this->input->post ( 'enddt' );
			$state = $this->input->post ( 'state' );
			$motive = $this->input->post ( 'motive' );
			$this->load->model ( 'request/request_tickets_model', 'conn2', true );
			
			$data = $this->conn2->getDataEventualPDF ( $dateStart, $dateEnd, $motive, $state);
			$count = count ( $data ); //tama;o del arreglo
			

			//ini pdf
			$this->load->library ( 'FPDF/pdf_ticket_eventual' );
			$pdf = new Pdf_ticket_eventual ( 'P', 'mm', 'Letter', '' ); //le hubiera podido pasar la fecha pero lo hice en la linea de abajo  
			

			$mydateformat = ' Fecha de viaje:    ' . $data [0] ['ticket_date'];
			
			$pdf->myheader = $mydateformat . '     ' . $data [0] ['state']; //si levanta el pdf es porque al menos hay una fila, y las fechas son iguales
			

			$pdf->AddPage ();
			
			$pdf->Ln ( 1 );
			
			$pdf->SetFont ( 'Arial', '', 8 );
			$flag = true;
			
			for($i = 0; $i < $count; $i ++) {
				//$pdf->Cell(40,10,$data[$i]['request_id']);
				

				if ($flag == false) {
					$flag = true;
					$pdf->SetFillColor ( 255, 255, 255 );
				} else {
					$flag = false;
					$pdf->SetFillColor ( 200, 215, 235 );
				}

				$str = iconv ( 'UTF-8', 'windows-1252', $i + 1 );
				$pdf->Cell ( 7, 7, $str, '', '', '', true );

				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['person_worker'] );
				$pdf->Cell ( 60, 7, $str, '', '', '', true );
				
				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['person_identity'] );
				$pdf->Cell ( 25, 7, $str, '', '', '', true );
				
				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['province_namefrom'] );
				$pdf->Cell ( 30, 7, $str, '', '', '', true );
				
				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['province_nameto'] );
				$pdf->Cell ( 30, 7, $str, '', '', '', true );
				
				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['state'] );
				$pdf->Cell ( 20, 7, $str, '', '', '', true );
				
				$str = iconv ( 'UTF-8', 'windows-1252', $data [$i] ['hotel'] );
				$pdf->Cell ( 20, 7, $str, '', '', '', true );
				
				$pdf->Ln ();
			
			}
			
			$pdf->Output ( 'Reporte de Eventuales - '.$data [0] ['ticket_date'].'.pdf', 'D' );
	}
	
	/**
	 * Funcion para Insertar Provincia
	 *
	 */
	function insert() {
		$centinela = new Centinela ( );
		$flag = $centinela->accessTo ( 'ticket/ticket_editeventual' );
		if ($flag) {
			$result = $this->conn->insert ();
			die ( "{success : $result}" );
		} else {
			$this->redirectError ();
		}
	}
	
	function insertMulti($request_id, $ticket_date, $state_id) {
		if ($this->session->userdata ( 'roll_id' ) >= 4) {
			$result = $this->conn->insertMulti ( $request_id, $ticket_date, $state_id );
			die ( "{success : $result}" );
		} else {
			$this->redirectError ();
		}
	}
	
	/**
	 * Elimina Transporte
	 * recibe como parametro el nombre de la provincia
	 */
	function delete($id) {
		$centinela = new Centinela ( );
		$flag = $centinela->accessTo ( 'ticket/ticket_editeventual' );
		if ($flag) {
			$this->conn->delete ( $id );
		} else {
			$this->redirectError ();
		}
	}
	
	/**
	 * Devuelve una provincia dado el nombre de la misma
	 *
	 */
	function get() {
		$data = $this->conn->get ();
		die ( "{data : " . json_encode ( $data ) . "}" );
	
	}
	
	function getById($request_id, $ticket_date) {
		$data = $this->conn->getById ( $request_id, $ticket_date );
		die ( "{data : " . json_encode ( $data ) . "}" );
		//echo "<pre>"; print_r($data); echo "</pre>";
	}

}

?>
